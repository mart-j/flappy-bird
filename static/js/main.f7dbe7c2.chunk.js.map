{"version":3,"sources":["components/grid/Grid.tsx","helpers/generateGrid.tsx","helpers/generateBlock.tsx","helpers/movement.tsx","helpers/randomInterval.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/grid/Grid.module.scss"],"names":["Grid","blockSecond","block","grid","bird","className","styles","canvas","map","cell","i","classNames","_","isEqual","some","getGrid","x","y","push","generateBlock","distance","topXHighest","random","bottomXHighest","moveBlocksForward","newBlock","forEach","blockCell","randomInterval","App","useState","setBird","toggle","setToggle","toggleBlock","setToggleBlock","setBlock","setBlockSecond","useEffect","setTimeout","newBird","fallDown","alert","onClick","jumpUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f7dbe7c2.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport styles from './Grid.module.scss';\n\ninterface Props {\n  grid: { x: number; y: number }[];\n  block: { x: number; y: number }[];\n  blockSecond: { x: number; y: number }[];\n  bird: { x: number; y: number };\n}\n\nconst Grid: FC<Props> = ({ blockSecond, block, grid, bird }) => {\n  return (\n    <div className={styles.canvas}>\n      {grid.map((cell, i) => {\n        return (\n          <div\n            key={`${i}`}\n            className={classNames({\n              [styles.cell]: true,\n              [styles.bird]: _.isEqual(cell, bird),\n              [styles.block]: _.some(block, cell),\n              [styles.blockSecond]: _.some(blockSecond, cell),\n            })}\n          ></div>\n        );\n      })}\n    </div>\n  );\n};\nexport default Grid;\n","export const getGrid = () => {\n  const grid: { x: number; y: number }[] = [];\n  for (let x = 0; x < 12; x++) {\n    for (let y = 0; y < 12; y++) {\n      grid.push({ x, y });\n    }\n  }\n  return grid;\n};\n","import _ from 'lodash';\n\nexport const generateBlock = (distance: number) => {\n  const topXHighest = _.random(4, 5);\n  const bottomXHighest = _.random(8, 9);\n  const block = [];\n  for (let i = 0; i < topXHighest; i++) {\n    block.push({ x: i, y: distance });\n  }\n  for (let i = bottomXHighest; i < 12 ; i++) {\n    block.push({ x: i, y: distance });\n  }\n\n  return block;\n};\n","import { generateBlock } from './generateBlock';\n\nexport const jumpUp = (bird: { x: number; y: number }) => {\n  const newBird = { ...bird };\n  newBird.x -= 1;\n  return newBird;\n};\n\nexport const fallDown = (bird: { x: number; y: number }) => {\n  const newBird = { ...bird };\n  newBird.x += 1;\n  return newBird;\n};\n\nexport const moveBlocksForward = (block: { x: number; y: number }[]) => {\n  const newBlock = [...block];\n  // eslint-disable-next-line consistent-return\n  newBlock.forEach((blockCell) => {\n    // eslint-disable-next-line no-param-reassign\n    blockCell.y -= 1;\n  });\n  return newBlock;\n};\n","import _ from 'lodash';\n\nexport const randomInterval = () => {\n  return _.random(12, 18);\n};\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport Grid from './components/grid/Grid';\nimport { getGrid } from './helpers/generateGrid';\nimport { generateBlock } from './helpers/generateBlock';\nimport { jumpUp, fallDown, moveBlocksForward } from './helpers/movement';\nimport { randomInterval } from './helpers/randomInterval';\n\nconst App = () => {\n  const [bird, setBird] = useState({ x: 4, y: 4 });\n  const [toggle, setToggle] = useState(false);\n  const [toggleBlock, setToggleBlock] = useState(false);\n  const [block, setBlock] = useState(generateBlock(12));\n  const [blockSecond, setBlockSecond] = useState(generateBlock(6));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setToggle(!toggle);\n    }, 1000);\n    setBird(fallDown(bird));\n  }, [toggle]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setToggleBlock(!toggleBlock);\n    }, 300);\n    setBlock(moveBlocksForward(block));\n    setBlockSecond(moveBlocksForward(blockSecond));\n  }, [toggleBlock]);\n\n  useEffect(() => {\n    if (_.some(block, bird) || _.some(blockSecond, bird)) {\n      alert();\n    }\n    if (block[0].y < 0) {\n      setBlock(generateBlock(randomInterval()));\n    }\n    if (blockSecond[0].y < 0) {\n      setBlockSecond(generateBlock(randomInterval()));\n    }\n  }, [toggleBlock, toggle]);\n\n  return (\n    <div onClick={() => setBird(jumpUp(bird))} className=\"container\">\n      <Grid\n        blockSecond={blockSecond}\n        block={block}\n        bird={bird}\n        grid={getGrid()}\n      />\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Grid_canvas__2vZnH\",\"cell\":\"Grid_cell__Gw65o\",\"bird\":\"Grid_bird__ss_YB\",\"block\":\"Grid_block__3iHo1\",\"blockSecond\":\"Grid_blockSecond__2gLBH\"};"],"sourceRoot":""}